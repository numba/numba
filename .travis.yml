# References https://gist.github.com/dan-blanchard/7045057
language: python

python:
  - "2.6"
  - "2.7"
  - "3.3"
  - "3.4"

branches:
  only:
    - master
    - llvmlite2

before_install:
  # Install Miniconda
  - wget http://repo.continuum.io/miniconda/Miniconda3-3.7.0-Linux-x86_64.sh -O miniconda.sh
  - chmod +x miniconda.sh
  - ./miniconda.sh -b
  - export PATH=$HOME/miniconda3/bin:$PATH
  - PY_MAJOR_MINOR=${TRAVIS_PYTHON_VERSION:0:3}
  # Setup environment
  - conda create -n travisci --yes python=$PY_MAJOR_MINOR numpy cffi
  - source activate travisci
  # Install llvmdev (separate channel, for now)
  - conda install --yes -c numba llvmdev="3.5*"
  # Install unittest2 for Python 2
  - if [ $PY_MAJOR_MINOR == "2.6" ]; then conda install --yes unittest2 argparse; fi
  # Install enum34 for Python < 3.4
  - if [ $PY_MAJOR_MINOR \< "3.4" ]; then conda install --yes enum34; fi
  # Install funcsigs for Python < 3.3
  - if [ $PY_MAJOR_MINOR \< "3.3" ]; then conda install --yes -c numba funcsigs; fi
  # The next couple lines fix a crash with multiprocessing on Travis
  # and are not specific to using Miniconda
  - sudo rm -rf /dev/shm
  - sudo ln -s /run/shm /dev/shm
  # We need this line to have g++ 4.8 available in apt
  # (Travis' default gcc version doesn't support C++11).
  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
  - sudo apt-get update -qq
  - sudo apt-get install -qq gcc-4.8 g++-4.8
  # Force g++ 4.8 to be the default version
  - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 90
  # Install dependencies for building the documentation
  - conda install --yes pip sphinx pygments
  - pip install sphinxjp.themecore sphinxjp.themes.basicstrap

  # Install boost for impyla
  #- if [ ${TRAVIS_PYTHON_VERSION:0:1} == "2" ]; then sudo apt-get install libboost-all-dev; fi
  # Install pytest for impyla
  #- conda install --yes pytest

install:
    # Build and install llvmlite from source
    - git clone git://github.com/numba/llvmlite.git -q
    - cd llvmlite && python setup.py build && python setup.py install -q >/dev/null && cd ..
    # Build numba extensions without silencing compile errors
    - python setup.py build_ext -q
    # Install numba
    - python setup.py install -q >/dev/null
    # Install impyla
    #- if [ ${TRAVIS_PYTHON_VERSION:0:1} == "2" ]; then export LLVM_CONFIG_PATH=$(which llvm-config); fi
    #- if [ ${TRAVIS_PYTHON_VERSION:0:1} == "2" ]; then cd $HOME ; git clone https://github.com/cloudera/impyla.git -q; fi
    #- if [ ${TRAVIS_PYTHON_VERSION:0:1} == "2" ]; then cd impyla ; make ; python setup.py install; fi

script:
    # Ensure that the documentation builds without warnings
    - cd $TRAVIS_BUILD_DIR/docs ; make SPHINXOPTS=-W clean html
    # Run the Numba test suite
    - cd ~ ; python -m numba.testing -v -b -m
    # NOTE: if the impyla tests fail, contact Uri Laserson (@laserson)
    #- if [ ${TRAVIS_PYTHON_VERSION:0:1} == "2" ]; then cd $HOME; py.test --udf $HOME/impyla/impala/tests/test_udf_compile.py; fi

notifications:
  email: false
  flowdock: "cb7bc57e58b3d42f77685f93211c03ab"
  on_success: "change"
  on_failure: "always" # "change"
