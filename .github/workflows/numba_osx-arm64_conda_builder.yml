name: numba_osx-arm64_conda_builder

on:
  pull_request:
    paths:
      - .github/workflows/numba_osx-arm64_conda_builder.yml
      - buildscripts/condarecipe.local/**
      - .github/workflows/conda_workflow_matrix.json
  workflow_dispatch:
    inputs:
      llvmlite_run_id:
        description: 'llvmlite workflow run ID (optional)'
        required: false
        type: string

# Add concurrency control
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  CONDA_CHANNEL_NUMBA: numba/label/dev

jobs:
  load-matrix:
    runs-on: ubuntu-latest
    outputs:
      build-matrix-json: ${{ steps.parse_matrix.outputs.build-matrix-json }}
      test-matrix-json: ${{ steps.parse_matrix.outputs.test-matrix-json }}
    steps:
      - uses: actions/checkout@v4
      - id: parse_matrix
        name: Parse Workflow Matrix JSON
        run: |
          BUILD_JSON=$(jq -c .conda_build_matrix .github/workflows/conda_workflow_matrix.json)
          TEST_JSON=$(jq -c .conda_test_matrix .github/workflows/conda_workflow_matrix.json)
          echo "build matrix: $BUILD_JSON"
          echo "test matrix: $TEST_JSON"
          echo "build-matrix-json=$BUILD_JSON" >> $GITHUB_OUTPUT
          echo "test-matrix-json=$TEST_JSON" >> $GITHUB_OUTPUT

  osx-arm64-build-conda:
    name: osx-arm64-build-conda (py ${{ matrix.python-version }}, np ${{ matrix.numpy_build }})
    needs: load-matrix
    runs-on: macos-14
    env:
      EXTRA_CHANNELS: ${{ matrix.python-version == '3.14' && '-c ad-testing/label/py314' || '' }}
    defaults:
      run:
        shell: bash -elx {0}
    strategy:
      matrix:
        include: ${{ fromJson(needs.load-matrix.outputs.build-matrix-json) }}
      fail-fast: false

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: 3.12
          auto-update-conda: true
          auto-activate-base: true
          activate-environment: true

      - name: Download llvmlite Artifact
        if: ${{ inputs.llvmlite_run_id != '' }}
        uses: actions/download-artifact@v4
        with:
          name: llvmlite-osx-arm64-py${{ matrix.python-version }}
          path: llvmlite_conda
          run-id: ${{ inputs.llvmlite_run_id }}
          repository: numba/llvmlite
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install conda-build
        run: conda install conda-build

      - name: Build Numba conda package
        run: |
          CONDA_CHANNEL_DIR="conda_channel_dir"
          mkdir -p $CONDA_CHANNEL_DIR

          # Set channel based on whether llvmlite artifact was downloaded
          if [ "${{ inputs.llvmlite_run_id }}" != "" ]; then
            LLVMLITE_CHANNEL="file://${{ github.workspace }}/llvmlite_conda"
          else
            LLVMLITE_CHANNEL="${{ env.CONDA_CHANNEL_NUMBA }}"
          fi

          if [ -n "${EXTRA_CHANNELS}" ]; then
            extra_args=(${EXTRA_CHANNELS})
          else
            extra_args=()
          fi

          conda build --debug -c $LLVMLITE_CHANNEL "${extra_args[@]}" -c defaults \
            --python=${{ matrix.python-version }} \
            --numpy=${{ matrix.numpy_build }} blas=*=openblas \
            buildscripts/condarecipe.local/ \
            --output-folder=$CONDA_CHANNEL_DIR \
            --no-test

      - name: Upload numba conda package
        uses: actions/upload-artifact@v4
        with:
          name: numba_osx-arm64_conda_py${{ matrix.python-version }}
          path: conda_channel_dir
          compression-level: 0
          retention-days: 7
          if-no-files-found: error

  osx-arm64-test:
    name: osx-arm64-test-conda (py ${{ matrix.python-version }}, np ${{ matrix.numpy_test }})
    needs: [load-matrix, osx-arm64-build-conda]
    runs-on: macos-14
    env:
      EXTRA_CHANNELS: ${{ matrix.python-version == '3.14' && '-c ad-testing/label/py314' || '' }}
    defaults:
      run:
        shell: bash -elx {0}
    strategy:
      matrix:
        include: ${{ fromJson(needs.load-matrix.outputs.test-matrix-json) }}
      fail-fast: false

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: 3.12
          auto-update-conda: true
          auto-activate-base: true
          activate-environment: true

      - name: Download llvmlite artifact
        if: ${{ inputs.llvmlite_run_id != '' }}
        uses: actions/download-artifact@v4
        with:
          name: llvmlite-osx-arm64-py${{ matrix.python-version }}
          path: llvmlite_conda
          run-id: ${{ inputs.llvmlite_run_id }}
          repository: numba/llvmlite
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download numba artifact
        uses: actions/download-artifact@v4
        with:
          name: numba_osx-arm64_conda_py${{ matrix.python-version }}

      - name: Install conda-build
        run: |
          conda install conda-build

      - name: Run tests
        env:
          TESTS_TO_RUN: "numba.tests"
          NUMBA_ENABLE_CUDASIM: 1
        run: |
          # Set channel based on whether llvmlite artifact was downloaded
          if [ "${{ inputs.llvmlite_run_id }}" != "" ]; then
            LLVMLITE_CHANNEL="file://${{ github.workspace }}/llvmlite_conda"
          else
            LLVMLITE_CHANNEL="${{ env.CONDA_CHANNEL_NUMBA }}"
          fi

          if [ -n "${EXTRA_CHANNELS}" ]; then
            extra_args=(${EXTRA_CHANNELS})
          else
            extra_args=()
          fi

          conda build -c $LLVMLITE_CHANNEL "${extra_args[@]}" -c defaults \
            --python=${{ matrix.python-version }} \
            --extra-deps numpy=${{ matrix.numpy_test }} blas=*=openblas \
            --test \
            osx-arm64/numba*.conda
