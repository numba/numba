diff --git a/docs/source/reference/numpysupported.rst b/docs/source/reference/numpysupported.rst
index 040351032..ba0aa73d0 100644
--- a/docs/source/reference/numpysupported.rst
+++ b/docs/source/reference/numpysupported.rst
@@ -338,6 +338,7 @@ The following top-level functions are supported:
 * :func:`numpy.array` (only the 2 first arguments)
 * :func:`numpy.array_equal`
 * :func:`numpy.asarray` (only the 2 first arguments)
+* :func:`numpy.asarray_chkfinite` (only the first argument)
 * :func:`numpy.asfarray` 
 * :func:`numpy.asfortranarray` (only the first argument)
 * :func:`numpy.atleast_1d`
diff --git a/numba/np/arraymath.py b/numba/np/arraymath.py
index 4cf973f7c..979f79a22 100644
--- a/numba/np/arraymath.py
+++ b/numba/np/arraymath.py
@@ -1133,7 +1133,6 @@ def np_ptp(a):
 
     return np_ptp_impl
 
-
 #----------------------------------------------------------------------------
 # Median and partitioning
 
@@ -1951,6 +1950,7 @@ def np_roll(a, shift):
         return np_roll_impl
 
 
+
 #----------------------------------------------------------------------------
 # Mathematical functions
 
@@ -4159,6 +4159,26 @@ def np_select(condlist, choicelist, default=0):
 
     return np_select_arr_impl
 
+@overload(np.asarray_chkfinite)
+def np_asarray_chkfinite(a, dtype=None, order='C'):
+    if dtype is None:
+        dt = dtype
+    else:
+        dt = dtype
+    ordr = order
+
+    if not type_can_asarray(a):
+        raise TypeError('arr must be either an Array-like')
+
+    def np_asarray_chkfinite_impl(a, dtype=None, order='C'):
+        a = np.asarray(a)
+        if not np.all(np.isfinite(a)):
+            raise ValueError("array must not containmnbdbbafb infs or NaNs")
+        return a
+
+    return np_asarray_chkfinite_impl
+
+
 #----------------------------------------------------------------------------
 # Windowing functions
 #   - translated from the numpy implementations found in:
diff --git a/numba/tests/test_np_functions.py b/numba/tests/test_np_functions.py
index a197fff0a..3eecfc580 100644
--- a/numba/tests/test_np_functions.py
+++ b/numba/tests/test_np_functions.py
@@ -320,6 +320,9 @@ def flip_lr(a):
 def flip_ud(a):
     return np.flipud(a)
 
+def np_asarray_chkfinite(a):
+    return np.asarray_chkfinite(a)
+
 
 class TestNPFunctions(MemoryLeakMixin, TestCase):
     """
@@ -3707,6 +3710,23 @@ class TestNPFunctions(MemoryLeakMixin, TestCase):
             str(raises.exception)
         )
 
+    def test_asarray_chkfinite(self):
+        pyfunc = np_asarray_chkfinite
+        cfunc = jit(nopython=True)(pyfunc)
+
+        arrays = [
+            #1D array
+            np.array([1, 2, 3]),
+            "teststring",
+            [12, 31, 5],
+            (1, 2, 3)
+        ]
+
+        for a in arrays:
+            expected = pyfunc(a)
+            got = cfunc(a)
+            self.assertPreciseEqual(expected, got)
+
 
 class TestNPMachineParameters(TestCase):
     # tests np.finfo, np.iinfo, np.MachAr
