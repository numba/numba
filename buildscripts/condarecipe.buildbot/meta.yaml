#
# This recipe only runs the CUDA tests.  It is meant as a dependent recipe
# to the main recipe, since CUDA tests cannot generally be run on any
# build VM (a special setup is needed that may not be compatible with
# the build environment, e.g. CentOS 5).
#

package:
   name: numba
   version: {{ GIT_DESCRIBE_TAG }}

source:
   path: ../..

build:
  number: {{ GIT_DESCRIBE_NUMBER|int }}
  entry_points:
    - pycc = numba.pycc:main
    - numba = numba.numba_entry:main
  script_env:
    - PY_VCRUNTIME_REDIST

requirements:
  # build and run dependencies are duplicated to avoid setuptools issues
  # when we also set install_requires in setup.py
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
  host:
    - python
    - numpy x.x
    - setuptools
    # On channel https://anaconda.org/numba/
    - llvmlite 0.21.*
    - funcsigs       [py27]
    - singledispatch [py27]
  run:
    - python
    - numpy x.x
    # On channel https://anaconda.org/numba/
    - llvmlite 0.21.*
    - funcsigs       [py27]
    - singledispatch [py27]
    # Need these for AOT?
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
test:
  requires:
    - jinja2
    # Required to test optional Numba features
    - cffi
    - scipy
    - ipython
    - cudatoolkit {{ environ.get('CUDATOOLKIT_VERSION', '7.5') }} # default to 7.5
    - setuptools
  files:
    - mandel.py
  commands:
    # Check Numba executables are there
    - pycc -h
    - numba -h
    # run system info tool
    - numba -s
    # Check test discovery works
    - python -m numba.tests.test_runtests
    # Run the CUDA test suite
    - python -m numba.runtests -v -m -b numba.cuda.tests

about:
  home: http://numba.pydata.org/
  license: BSD
  license_file: LICENSE
  summary: a just-in-time Python function compiler based on LLVM
